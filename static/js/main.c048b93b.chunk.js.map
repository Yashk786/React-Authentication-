{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logOutTimer","AuthContext","React","createContext","token","isLoggedIn","logIn","logOut","calculateRemainingTime","expirationTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","storedToken","localStorage","getItem","storedExpirationTime","remainingTime","removeItem","duration","retrieveStoredToken","useState","setToken","userIsLoggedIn","logOutHandler","useCallback","clearTimeout","useEffect","console","log","setTimeout","contextValue","setItem","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","ProfileForm","history","useHistory","newPasswordInputRef","useRef","form","onSubmit","event","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","replace","control","htmlFor","type","id","minLength","ref","action","UserProfile","profile","AuthForm","emailInputRef","passwordInputRef","isLoading","setIsLoading","isLogin","setIsLogin","auth","url","enteredEmail","enteredPassword","email","ok","json","data","Error","expiresIn","toISOString","catch","err","alert","message","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c048b93b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__3PvGF\",\"control\":\"ProfileForm_control__yx7XQ\",\"action\":\"ProfileForm_action__3PGXF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__Pe0yj\",\"logo\":\"MainNavigation_logo__3Dou7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__3NVOJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__2k53Z\"};","import React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nlet logOutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  logIn: (token) => {},\r\n  logOut: () => {},\r\n});\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n  const currentTime = new Date().getTime();\r\n  const adjExpirationTime = new Date(expirationTime).getTime();\r\n\r\n  const remainingDuration = currentTime - adjExpirationTime;\r\n\r\n  return remainingDuration;\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n  const storedToken = localStorage.getItem(\"token\");\r\n  const storedExpirationTime = localStorage.getItem(\"expirationTime\");\r\n\r\n  const remainingTime = calculateRemainingTime(storedExpirationTime);\r\n\r\n  if (remainingTime <= 3600) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    token: storedToken,\r\n    duration: remainingTime,\r\n  };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retrieveStoredToken();\r\n  let initialToken;\r\n  if (tokenData) {\r\n    initialToken = tokenData.token;\r\n  }\r\n\r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const logOutHandler = useCallback(() => {\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n\r\n    if (logOutTimer) {\r\n      clearTimeout(logOutTimer);\r\n    }\r\n  }, []);\r\n\r\n  const logInHandler = (token, expirationTime) => {\r\n    setToken(token);\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"expirationTime\", expirationTime);\r\n\r\n    const remainingTime = calculateRemainingTime(expirationTime);\r\n\r\n    logOutTimer = setTimeout(logOutHandler, remainingTime);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tokenData) {\r\n      console.log(tokenData.duration);\r\n      logOutTimer = setTimeout(logOutHandler, tokenData.duration);\r\n    }\r\n  }, [tokenData, logOutHandler]);\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    logIn: logInHandler,\r\n    logOut: logOutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\n\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n\n  const logOutHandler = () => {\n    authCtx.logOut();\n  };\n\n  const isLoggedIn = authCtx.isLoggedIn;\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <Link to=\"/auth\">Login</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to=\"/profile\">Profile</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <button onClick={logOutHandler}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef, useContext } from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./ProfileForm.module.css\";\n\nconst ProfileForm = () => {\n  const history = useHistory()\n  const newPasswordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredNewPassword = newPasswordInputRef.current.value;\n\n    // add validation\n\n    fetch(\n      \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyDUStYmizIssy19g9nvHLcGKam9zGHI-LQ\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          idToken: authCtx.token,\n          password: enteredNewPassword,\n          returnSecureToken: false,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then((res) => {\n      // assumption: Always succeeds!\n      history.replace('/')\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"new-password\">New Password</label>\n        <input\n          type=\"password\"\n          id=\"new-password\"\n          minLength=\"7\"\n          ref={newPasswordInputRef}\n        />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useContext, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLogin, setIsLogin] = useState(true);\n\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDUStYmizIssy19g9nvHLcGKam9zGHI-LQ\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDUStYmizIssy19g9nvHLcGKam9zGHI-LQ\";\n    }\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            //Show error\n            let errorMessage = \"Authentication is failed\";\n            /*  if (data.error && data.error.message) {\n              errorMessage = data.error.message;\n            } */\n\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        const expirationTime = new Date(\n          new Date().getTime() + +data.expiresIn * 1000\n        );\n        authCtx.logIn(data.idToken, expirationTime.toISOString());\n        history.replace(\"/\");\n      })\n      .catch((err) => alert(err.message));\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Sending request..</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { useContext } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport UserProfile from \"./components/Profile/UserProfile\";\nimport AuthPage from \"./pages/AuthPage\";\nimport HomePage from \"./pages/HomePage\";\nimport AuthContext from \"./store/auth-context\";\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        \n        {!authCtx.isLoggedIn && (\n          <Route path=\"/auth\">\n            <AuthPage />\n          </Route>\n        )}\n\n        <Route path=\"/profile\">\n          {authCtx.isLoggedIn && <UserProfile />}\n          {!authCtx.isLoggedIn && <Redirect to=\"/auth\" />}\n        </Route>\n\n        <Route path=\"*\">\n          <Redirect to=\"/\"></Redirect>\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./store/auth-context\";\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__1wNdP\",\"control\":\"AuthForm_control__LV6zg\",\"actions\":\"AuthForm_actions__6iBqI\",\"toggle\":\"AuthForm_toggle__uygcD\"};"],"sourceRoot":""}